- if math_problem.errors.any?
  .error_explanation
    %h2
      = pluralize(math_problem.errors.count, "error")
    %ul
      - math_problem.errors.full_messages.each do |msg|
        %li
          = msg
= form.association :problem_level, :as => :hidden
#math-markup-input-fields
  #question
    #question-equation-editor
      =link_to "Launch Equation Editor for Question", "javascript:OpenLatexEditor('math_problem_question_markup','latex','')"
    .editor-explanation
      (note: will add to existing markup)
    #question_markup
      = form.input :question_markup, :as => :text
  #answer
    #answer-equation-editor
      =link_to "Launch Equation Editor for Answer", "javascript:OpenLatexEditor('math_problem_answer_markup','latex','')"
    .editor-explanation
      (note: will add to existing markup)
    #answer_markup
      = form.input :answer_markup, :as => :text 
#level
  = form.association :problem_level, :label => "Level: ", :collection => @problem_type.problem_levels, :label_method => :level_number, :include_blank => false, :confirm => "Are you sure?"
      
.actions
  = form.submit
